{"remainingRequest":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/steini/Documents/GitHub/Mousikal-client/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/steini/Documents/GitHub/Mousikal-client/src/components/Comments.vue","mtime":1576087644995},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js","mtime":499166100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Comments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container>\n\n     <v-row>\n      <v-col class=\"md-6\">TESTING\n        <v-img src=\"\"></v-img>\n      </v-col>\n      <v-col class=\"md-2\">\n        <v-row v-for=\"track in tracks\" :key=\"track\">\n          <h4>{{track.name}} {{track.duration_ms}}</h4>\n        </v-row>\n      </v-col>\n    </v-row>\n\n    <v-layout text-center wrap justify-center>\n      <v-flex xs6 mb-5>\n        <div v-if=\"loggedInUserName!='Anonymous'\">\n          <h2 class=\"headline font-weight-bold mb-3\">Make a comment</h2>\n          <v-layout justify-center>\n            <v-textarea outlined name=\"comment-box\" label=\"Make a comment\" value v-model=\"comment\"></v-textarea>\n          </v-layout>\n          <v-btn class=\"white--text\" color=\"deep-purple accent-4\" @click=\"submitComment\">Submit</v-btn>\n        </div>\n      </v-flex>\n\n      <v-layout justify-center v-for=\"comment in albumComments\" :key=\"comment.date\">\n        <v-card class=\"mx-6 mb-6\" color=\"green\" dark max-width=\"600\" min-width=\"500\">\n          <v-card-title>\n            <v-icon large left>mdi-comment</v-icon>\n            <span class=\"title font-weight-light\">Comment</span>\n          </v-card-title>\n\n          <v-card-text\n            class=\"headline font-weight-bold\"\n            v-if=\"comment.edit!=true\"\n          >{{comment.commentBody}}</v-card-text>\n          <div v-else>\n            <v-textarea\n              outlined\n              name=\"comment-box\"\n              label=\"Make a comment\"\n              value\n              v-model=\"comment.editVersion\"\n            ></v-textarea>\n            <v-btn\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              @click=\"submitEdit(comment.date)\"\n            >Submit</v-btn>\n            <v-btn\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              @click=\"cancelEdit(comment.date)\"\n            >Cancel</v-btn>\n          </div>\n\n          <v-card-actions>\n            <v-list-item class=\"grow\">\n              <v-list-item-avatar color=\"grey darken-3\">\n                <v-img\n                  class=\"elevation-6\"\n                  src=\"https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortCurly&accessoriesType=Prescription02&hairColor=Black&facialHairType=Blank&clotheType=Hoodie&clotheColor=White&eyeType=Default&eyebrowType=DefaultNatural&mouthType=Default&skinColor=Light\"\n                ></v-img>\n              </v-list-item-avatar>\n\n              <v-list-item-content>\n                <v-list-item-title>{{comment.user}}</v-list-item-title>\n              </v-list-item-content>\n\n              <v-row align=\"center\" justify=\"end\" v-if=\"comment.user == userName\">\n                <v-icon\n                  class=\"mr-1\"\n                  @click=\"editComment(comment.date)\"\n                  v-if=\"comment.edit!=true\"\n                >mdi-pencil</v-icon>\n                <span\n                  class=\"subheading mr-2\"\n                  @click=\"editComment(comment.date)\"\n                  v-if=\"comment.edit!=true\"\n                >Edit</span>\n                <span class=\"mr-1\"></span>\n                <v-icon class=\"mr-1\" @click=\"deleteComment(comment.date)\">mdi-delete</v-icon>\n                <span class=\"subheading\" @click=\"deleteComment(comment.date)\">Delete</span>\n              </v-row>\n            </v-list-item>\n          </v-card-actions>\n        </v-card>\n      </v-layout>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport { createComment } from \"../api/comment/Comment\";\nimport { getAlbumComments } from \"../api/comment/Comment\";\nimport { updateComments } from \"../api/comment/Comment\";\n\n// import axios from 'axios';\n\nexport default {\n  props: {\n    loggedInUserName: String,\n    albumURL: String,\n    albumName: String,\n    tracks: [],\n    artistName: String\n  },\n  data: () => ({\n    userName: \"bob\",\n    comment: \"\",\n    albumID: \"\",\n    albumComments: [],\n    tracks: [],\n    albumName: \"\"\n  }),\n  methods: {\n    async submitComment() {\n      //checking if albumID exists\n      //let result = await axios.get('');\n      let comments = await createComment({\n        user: this.userName,\n        commentBody: this.comment,\n        albumID: this.albumID\n      });\n      this.albumComments.unshift({\n        user: this.userName,\n        commentBody: this.comment,\n        albumID: this.albumID,\n        date: new Date().getTime()\n      });\n      this.comment = \"\";\n      return comments;\n      //console.log(comments);\n    },\n    async fetchAlbumComments() {\n      let comments = await getAlbumComments({ albumID: this.albumID });\n      //this.albumComments = comments;\n\n      this.albumComments = [];\n\n      comments.forEach(comment => {\n        this.albumComments.push({\n          ...comment,\n          edit: false,\n          editVersion: \"\"\n        });\n      });\n\n      return comments;\n    },\n    async deleteComment(date) {\n      this.albumComments = this.albumComments.filter(\n        comment => comment.date !== date\n      );\n\n      var tmp = [];\n      this.albumComments.forEach(comment => {\n        tmp.push({\n          albumID: comment.albumID,\n          user: comment.user,\n          commentBody: comment.commentBody,\n          date: comment.date\n        });\n      });\n\n      await updateComments(tmp);\n    },\n    async editComment(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n      this.albumComments[commentIndex].edit = true;\n      this.albumComments[commentIndex].editVersion = this.albumComments[\n        commentIndex\n      ].commentBody;\n    },\n    cancelEdit(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n      this.albumComments[commentIndex].edit = false;\n    },\n    async submitEdit(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n\n      this.albumComments[commentIndex].commentBody = this.albumComments[\n        commentIndex\n      ].editVersion;\n      this.albumComments[commentIndex].edit = false;\n\n      var tmp = [];\n      this.albumComments.forEach(comment => {\n        tmp.push({\n          albumID: comment.albumID,\n          user: comment.user,\n          commentBody: comment.commentBody,\n          date: comment.date\n        });\n      });\n\n      await updateComments(tmp);\n    }\n  },\n  mounted() {\n    window.console.log(\"using this\");\n    this.fetchAlbumComments();\n    //this.showAlbumData();\n  }\n};\n\n//Check if json object with albumID exists\n//If it doesnt exist create it\n//Once created push onto it the comment with username, comment, dateCreated\n</script>\n\n"],"sourceRoot":"src/components"}]}