{"remainingRequest":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/steini/Documents/GitHub/Mousikal-client/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/steini/Documents/GitHub/Mousikal-client/src/components/Comments.vue","mtime":1576109838603},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js","mtime":499166100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvc3RlaW5pL0RvY3VtZW50cy9HaXRIdWIvTW91c2lrYWwtY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGNyZWF0ZUNvbW1lbnQgfSBmcm9tICIuLi9hcGkvY29tbWVudC9Db21tZW50IjsKaW1wb3J0IHsgZ2V0QWxidW1Db21tZW50cyB9IGZyb20gIi4uL2FwaS9jb21tZW50L0NvbW1lbnQiOwppbXBvcnQgeyB1cGRhdGVDb21tZW50cyB9IGZyb20gIi4uL2FwaS9jb21tZW50L0NvbW1lbnQiOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGxvZ2dlZEluVXNlck5hbWU6IFN0cmluZywKICAgIGFsYnVtVVJMOiBTdHJpbmcsCiAgICBhbGJ1bU5hbWU6IFN0cmluZywKICAgIHRyYWNrczogW10sCiAgICBhcnRpc3ROYW1lOiBTdHJpbmcsCiAgICBhbGJ1bUlEOiBTdHJpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyTmFtZTogIiIsCiAgICAgIGNvbW1lbnQ6ICIiLAogICAgICBhbGJ1bUNvbW1lbnRzOiBbXSwKICAgICAgdHJhY2tzUmVxdWVzdGVkOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdENvbW1lbnQ6IGZ1bmN0aW9uIHN1Ym1pdENvbW1lbnQoKSB7CiAgICAgIHZhciBjb21tZW50czsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBzdWJtaXRDb21tZW50JChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGNyZWF0ZUNvbW1lbnQoewogICAgICAgICAgICAgICAgdXNlcjogdGhpcy51c2VyTmFtZSwKICAgICAgICAgICAgICAgIGNvbW1lbnRCb2R5OiB0aGlzLmNvbW1lbnQsCiAgICAgICAgICAgICAgICBhbGJ1bUlEOiB0aGlzLmFsYnVtSUQKICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY29tbWVudHMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHRoaXMuYWxidW1Db21tZW50cy51bnNoaWZ0KHsKICAgICAgICAgICAgICAgIHVzZXI6IHRoaXMudXNlck5hbWUsCiAgICAgICAgICAgICAgICBjb21tZW50Qm9keTogdGhpcy5jb21tZW50LAogICAgICAgICAgICAgICAgYWxidW1JRDogdGhpcy5hbGJ1bUlELAogICAgICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoKS5nZXRUaW1lKCkKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB0aGlzLmNvbW1lbnQgPSAiIjsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBjb21tZW50cyk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMpOwogICAgfSwKICAgIGdldFRyYWNrczogZnVuY3Rpb24gZ2V0VHJhY2tzKCkgewogICAgICB0aGlzLnRyYWNrc1JlcXVlc3RlZCA9IHRydWU7CiAgICB9LAogICAgcGxheVNvdW5kOiBmdW5jdGlvbiBwbGF5U291bmQoKSB7CiAgICAgIHZhciBhdWRpbyA9IG5ldyBBdWRpbyh0aGlzLnRyYWNrc1swXS5zYW1wbGVVUkwpOwogICAgICBhdWRpby5wbGF5KCk7CiAgICB9LAogICAgcmVxdWVzdFRyYWNrczogZnVuY3Rpb24gcmVxdWVzdFRyYWNrcygpIHsKICAgICAgdmFyIHIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidHJhY2tMaXN0Iik7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudHJhY2tzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgci5pbm5lckhUTUwgKz0gIjxoNCBvbmNsaWNrPXRoaXMudGVzdCgpPjxzcGFuIHN0eWxlPSdmbG9hdDpsZWZ0Oyc+IiArIHRoaXMudHJhY2tzW2ldLm5hbWUgKyAiPC9zcGFuPjxzcGFuIHN0eWxlPSdmbG9hdDpyaWdodDsnPiIgKyB0aGlzLm1pbGxpc1RvTWludXRlc0FuZFNlY29uZHModGhpcy50cmFja3NbaV0uZHVyYXRpb24pICsgIjwvc3Bhbj48L2g0Pjxicj4iOwogICAgICB9CiAgICB9LAogICAgZmV0Y2hBbGJ1bUNvbW1lbnRzOiBmdW5jdGlvbiBmZXRjaEFsYnVtQ29tbWVudHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY29tbWVudHM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZmV0Y2hBbGJ1bUNvbW1lbnRzJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChnZXRBbGJ1bUNvbW1lbnRzKHsKICAgICAgICAgICAgICAgIGFsYnVtSUQ6IHRoaXMuYWxidW1JRAogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjb21tZW50cyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIC8vdGhpcy5hbGJ1bUNvbW1lbnRzID0gY29tbWVudHM7CiAgICAgICAgICAgICAgLy8gdGhpcy5yZXF1ZXN0VHJhY2tzKCk7CiAgICAgICAgICAgICAgc2V0VGltZW91dCh0aGlzLnJlcXVlc3RUcmFja3MsIDUwMCk7CiAgICAgICAgICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzID0gW107CiAgICAgICAgICAgICAgY29tbWVudHMuZm9yRWFjaChmdW5jdGlvbiAoY29tbWVudCkgewogICAgICAgICAgICAgICAgX3RoaXMuYWxidW1Db21tZW50cy5wdXNoKF9vYmplY3RTcHJlYWQoe30sIGNvbW1lbnQsIHsKICAgICAgICAgICAgICAgICAgZWRpdDogZmFsc2UsCiAgICAgICAgICAgICAgICAgIGVkaXRWZXJzaW9uOiAiIgogICAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgY29tbWVudHMpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgdGhpcyk7CiAgICB9LAogICAgbWlsbGlzVG9NaW51dGVzQW5kU2Vjb25kczogZnVuY3Rpb24gbWlsbGlzVG9NaW51dGVzQW5kU2Vjb25kcyhtaWxsaXMpIHsKICAgICAgdmFyIG1pbnV0ZXMgPSBNYXRoLmZsb29yKG1pbGxpcyAvIDYwMDAwKTsKICAgICAgdmFyIHNlY29uZHMgPSAobWlsbGlzICUgNjAwMDAgLyAxMDAwKS50b0ZpeGVkKDApOwogICAgICByZXR1cm4gbWludXRlcyArICI6IiArIChzZWNvbmRzIDwgMTAgPyAiMCIgOiAiIikgKyBzZWNvbmRzOwogICAgfSwKICAgIGRlbGV0ZUNvbW1lbnQ6IGZ1bmN0aW9uIGRlbGV0ZUNvbW1lbnQoZGF0ZSkgewogICAgICB2YXIgdG1wOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGRlbGV0ZUNvbW1lbnQkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHRoaXMuYWxidW1Db21tZW50cyA9IHRoaXMuYWxidW1Db21tZW50cy5maWx0ZXIoZnVuY3Rpb24gKGNvbW1lbnQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBjb21tZW50LmRhdGUgIT09IGRhdGU7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgdG1wID0gW107CiAgICAgICAgICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGNvbW1lbnQpIHsKICAgICAgICAgICAgICAgIHRtcC5wdXNoKHsKICAgICAgICAgICAgICAgICAgYWxidW1JRDogY29tbWVudC5hbGJ1bUlELAogICAgICAgICAgICAgICAgICB1c2VyOiBjb21tZW50LnVzZXIsCiAgICAgICAgICAgICAgICAgIGNvbW1lbnRCb2R5OiBjb21tZW50LmNvbW1lbnRCb2R5LAogICAgICAgICAgICAgICAgICBkYXRlOiBjb21tZW50LmRhdGUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHVwZGF0ZUNvbW1lbnRzKHRtcCkpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgdGhpcyk7CiAgICB9LAogICAgZWRpdENvbW1lbnQ6IGZ1bmN0aW9uIGVkaXRDb21tZW50KGRhdGUpIHsKICAgICAgdmFyIGNvbW1lbnRJbmRleDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBlZGl0Q29tbWVudCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWVudEluZGV4ID0gdGhpcy5hbGJ1bUNvbW1lbnRzLmZpbmRJbmRleChmdW5jdGlvbiAoY29tbWVudCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1lbnQuZGF0ZSA9PSBkYXRlOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHRoaXMuYWxidW1Db21tZW50c1tjb21tZW50SW5kZXhdLmVkaXQgPSB0cnVlOyAvL2FsZXJ0KCJnb3QgaGVyZSIpOwoKICAgICAgICAgICAgICB0aGlzLmFsYnVtQ29tbWVudHNbY29tbWVudEluZGV4XS5lZGl0VmVyc2lvbiA9IHRoaXMuYWxidW1Db21tZW50c1tjb21tZW50SW5kZXhdLmNvbW1lbnRCb2R5OwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgdGhpcyk7CiAgICB9LAogICAgY2FuY2VsRWRpdDogZnVuY3Rpb24gY2FuY2VsRWRpdChkYXRlKSB7CiAgICAgIHZhciBjb21tZW50SW5kZXggPSB0aGlzLmFsYnVtQ29tbWVudHMuZmluZEluZGV4KGZ1bmN0aW9uIChjb21tZW50KSB7CiAgICAgICAgcmV0dXJuIGNvbW1lbnQuZGF0ZSA9PSBkYXRlOwogICAgICB9KTsKICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzW2NvbW1lbnRJbmRleF0uZWRpdCA9IGZhbHNlOwogICAgfSwKICAgIHN1Ym1pdEVkaXQ6IGZ1bmN0aW9uIHN1Ym1pdEVkaXQoZGF0ZSkgewogICAgICB2YXIgY29tbWVudEluZGV4LCB0bXA7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gc3VibWl0RWRpdCQoX2NvbnRleHQ1KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWVudEluZGV4ID0gdGhpcy5hbGJ1bUNvbW1lbnRzLmZpbmRJbmRleChmdW5jdGlvbiAoY29tbWVudCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1lbnQuZGF0ZSA9PSBkYXRlOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHRoaXMuYWxidW1Db21tZW50c1tjb21tZW50SW5kZXhdLmNvbW1lbnRCb2R5ID0gdGhpcy5hbGJ1bUNvbW1lbnRzW2NvbW1lbnRJbmRleF0uZWRpdFZlcnNpb247CiAgICAgICAgICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzW2NvbW1lbnRJbmRleF0uZWRpdCA9IGZhbHNlOwogICAgICAgICAgICAgIHRtcCA9IFtdOwogICAgICAgICAgICAgIHRoaXMuYWxidW1Db21tZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChjb21tZW50KSB7CiAgICAgICAgICAgICAgICB0bXAucHVzaCh7CiAgICAgICAgICAgICAgICAgIGFsYnVtSUQ6IGNvbW1lbnQuYWxidW1JRCwKICAgICAgICAgICAgICAgICAgdXNlcjogY29tbWVudC51c2VyLAogICAgICAgICAgICAgICAgICBjb21tZW50Qm9keTogY29tbWVudC5jb21tZW50Qm9keSwKICAgICAgICAgICAgICAgICAgZGF0ZTogY29tbWVudC5kYXRlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh1cGRhdGVDb21tZW50cyh0bXApKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZmV0Y2hBbGJ1bUNvbW1lbnRzKCk7CiAgICB0aGlzLnVzZXJOYW1lID0gdGhpcy5sb2dnZWRJblVzZXJOYW1lOwogIH0KfTs="},{"version":3,"sources":["Comments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <v-img\n          v-on:click=\"playSound()\"\n          :src=\"this.albumURL\"\n          contain\n          max-height=\"500\"\n          max-width=\"500\"\n        ></v-img>\n        <br />\n        <v-layout justify-center>\n          <v-subheader class=\"headline font-weight-bold\">{{this.artistName}}</v-subheader>\n        </v-layout>\n      </v-col>\n    </v-row>\n\n    <v-layout justify-center>\n      <v-subheader class=\"font-weight-light\">{{this.albumName}}</v-subheader>\n    </v-layout>\n\n    <v-layout justify-center>\n      <br />\n    </v-layout>\n    <v-btn v-on:click=\"getTracks()\">Get tracks</v-btn>\n    <br />\n\n    <v-layout justify-center>\n      <v-list v-if=\"tracksRequested\">\n        <v-list-item v-for=\"track in tracks\" :key=\"track.number\">\n          <v-card min-width=\" 600\">\n            <v-card-text>\n              {{track.name}}\n              <span style=\"float:right;\">{{millisToMinutesAndSeconds(track.duration)}}</span>\n            </v-card-text>\n          </v-card>\n        </v-list-item>\n      </v-list>\n    </v-layout>\n    <!-- \n    <v-list id=\"trackList\"></v-list>-->\n\n    <v-layout text-center wrap justify-center>\n      <v-flex xs6 mb-5>\n        <div v-if=\"loggedInUserName!='Anonymous'\">\n          <h2 class=\"headline font-weight-bold mb-3\">Make a comment</h2>\n          <v-layout justify-center>\n            <v-textarea outlined name=\"comment-box\" label=\"Make a comment\" value v-model=\"comment\"></v-textarea>\n          </v-layout>\n          <v-btn class=\"white--text\" color=\"deep-purple accent-4\" @click=\"submitComment\">Submit</v-btn>\n        </div>\n      </v-flex>\n\n      <v-layout justify-center v-for=\"comment in albumComments\" :key=\"comment.date\">\n        <v-card class=\"mx-6 mb-6\" color=\"green\" dark max-width=\"600\" min-width=\"500\">\n          <v-card-title>\n            <v-icon large left>mdi-comment</v-icon>\n            <span class=\"title font-weight-light\">Comment</span>\n          </v-card-title>\n\n          <v-card-text\n            class=\"headline font-weight-bold\"\n            v-if=\"comment.edit!=true\"\n          >{{comment.commentBody}}</v-card-text>\n          <div v-else>\n            <v-textarea\n              outlined\n              name=\"comment-box\"\n              label=\"Make a comment\"\n              value\n              v-model=\"comment.editVersion\"\n            ></v-textarea>\n            <v-btn\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              @click=\"submitEdit(comment.date)\"\n            >Submit</v-btn>\n            <v-btn\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              @click=\"cancelEdit(comment.date)\"\n            >Cancel</v-btn>\n          </div>\n\n          <v-card-actions>\n            <v-list-item class=\"grow\">\n              <v-list-item-avatar color=\"grey darken-3\">\n                <v-img\n                  class=\"elevation-6\"\n                  src=\"https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortCurly&accessoriesType=Prescription02&hairColor=Black&facialHairType=Blank&clotheType=Hoodie&clotheColor=White&eyeType=Default&eyebrowType=DefaultNatural&mouthType=Default&skinColor=Light\"\n                ></v-img>\n              </v-list-item-avatar>\n\n              <v-list-item-content>\n                <v-list-item-title>{{comment.user}}</v-list-item-title>\n              </v-list-item-content>\n\n              <v-row align=\"center\" justify=\"end\" v-if=\"comment.user == userName\">\n                <v-icon\n                  class=\"mr-1\"\n                  @click=\"editComment(comment.date)\"\n                  v-if=\"comment.edit!=true\"\n                >mdi-pencil</v-icon>\n                <span\n                  class=\"subheading mr-2\"\n                  @click=\"editComment(comment.date)\"\n                  v-if=\"comment.edit!=true\"\n                >Edit</span>\n                <span class=\"mr-1\"></span>\n                <v-icon class=\"mr-1\" @click=\"deleteComment(comment.date)\">mdi-delete</v-icon>\n                <span class=\"subheading\" @click=\"deleteComment(comment.date)\">Delete</span>\n              </v-row>\n            </v-list-item>\n          </v-card-actions>\n        </v-card>\n      </v-layout>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport { createComment } from \"../api/comment/Comment\";\nimport { getAlbumComments } from \"../api/comment/Comment\";\nimport { updateComments } from \"../api/comment/Comment\";\n\nexport default {\n  props: {\n    loggedInUserName: String,\n    albumURL: String,\n    albumName: String,\n    tracks: [],\n    artistName: String,\n    albumID: String\n  },\n  data: () => ({\n    userName: \"\",\n    comment: \"\",\n    albumComments: [],\n    tracksRequested: false\n  }),\n  methods: {\n    async submitComment() {\n      let comments = await createComment({\n        user: this.userName,\n        commentBody: this.comment,\n        albumID: this.albumID\n      });\n      this.albumComments.unshift({\n        user: this.userName,\n        commentBody: this.comment,\n        albumID: this.albumID,\n        date: new Date().getTime()\n      });\n      this.comment = \"\";\n      return comments;\n    },\n    getTracks() {\n      this.tracksRequested = true;\n    },\n    playSound() {\n      var audio = new Audio(this.tracks[0].sampleURL);\n      audio.play();\n    },\n    requestTracks() {\n      var r = document.getElementById(\"trackList\");\n      for (var i = 0; i < this.tracks.length; i++) {\n        r.innerHTML +=\n          \"<h4 onclick=this.test()><span style='float:left;'>\" +\n          this.tracks[i].name +\n          \"</span><span style='float:right;'>\" +\n          this.millisToMinutesAndSeconds(this.tracks[i].duration) +\n          \"</span></h4><br>\";\n      }\n    },\n    async fetchAlbumComments() {\n      let comments = await getAlbumComments({ albumID: this.albumID });\n      //this.albumComments = comments;\n      // this.requestTracks();\n      setTimeout(this.requestTracks, 500);\n      this.albumComments = [];\n\n      comments.forEach(comment => {\n        this.albumComments.push({\n          ...comment,\n          edit: false,\n          editVersion: \"\"\n        });\n      });\n      this.loaded = true;\n\n      return comments;\n    },\n    millisToMinutesAndSeconds(millis) {\n      var minutes = Math.floor(millis / 60000);\n      var seconds = ((millis % 60000) / 1000).toFixed(0);\n      return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n    },\n    async deleteComment(date) {\n      this.albumComments = this.albumComments.filter(\n        comment => comment.date !== date\n      );\n\n      var tmp = [];\n      this.albumComments.forEach(comment => {\n        tmp.push({\n          albumID: comment.albumID,\n          user: comment.user,\n          commentBody: comment.commentBody,\n          date: comment.date\n        });\n      });\n\n      await updateComments(tmp);\n    },\n    async editComment(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n      this.albumComments[commentIndex].edit = true;\n      //alert(\"got here\");\n      this.albumComments[commentIndex].editVersion = this.albumComments[\n        commentIndex\n      ].commentBody;\n    },\n    cancelEdit(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n      this.albumComments[commentIndex].edit = false;\n    },\n    async submitEdit(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n\n      this.albumComments[commentIndex].commentBody = this.albumComments[\n        commentIndex\n      ].editVersion;\n      this.albumComments[commentIndex].edit = false;\n\n      var tmp = [];\n      this.albumComments.forEach(comment => {\n        tmp.push({\n          albumID: comment.albumID,\n          user: comment.user,\n          commentBody: comment.commentBody,\n          date: comment.date\n        });\n      });\n\n      await updateComments(tmp);\n    }\n  },\n  mounted() {\n    this.fetchAlbumComments();\n    this.userName = this.loggedInUserName;\n  }\n};\n</script>\n\n"],"sourceRoot":"src/components"}]}