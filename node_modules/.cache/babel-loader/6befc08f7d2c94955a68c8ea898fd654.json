{"remainingRequest":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/steini/Documents/GitHub/Mousikal-client/src/components/ArtistPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/steini/Documents/GitHub/Mousikal-client/src/components/ArtistPage.vue","mtime":1576100930518},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js","mtime":499166100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ArtistPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div v-if=\"!albumClickedOn\">\n      <div>\n        <h1>{{artist}}</h1>\n      </div>\n\n      <v-container>\n        <v-row dense>\n          <v-col v-for=\"album in artistInfo\" :key=\"album.albumID\" :cols=\"4\">\n            <v-card>\n              <v-img\n                v-on:click=\"albumClicked(album.albumID, album.imageURL, album.album)\"\n                :src=\"album.imageURL\"\n                class=\"white--text align-end\"\n                gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n                height=\"auto\"\n                width=\"auto\"\n              ></v-img>\n              <v-card-actions>\n                <v-card-title>\n                  <span class=\"title font-weight-light\">{{album.album}}</span>\n                </v-card-title>\n                <div v-if=\"loggedInUserName!='Anonymous'\">\n                  <v-btn icon v-if=\"!checkifUserLiked(album.albumID)\">\n                    <v-icon color=\"gray\" v-on:click=\"likeAlbum(album.albumID)\">mdi-heart</v-icon>\n                  </v-btn>\n                  <v-btn icon v-if=\"checkifUserLiked(album.albumID)\">\n                    <v-icon color=\"red\" v-on:click=\"unlikeAlbum(album.albumID)\">mdi-heart</v-icon>\n                  </v-btn>\n                  {{albumsLikeCount(album.albumID)}}\n                </div>\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </div>\n    <div v-if=\"albumClickedOn\">\n      <Comments\n        :loggedInUserName=\"this.loggedInUserName\"\n        :albumURL=\"clickedOnInfo[0]\"\n        :albumName=\"clickedOnInfo[1]\"\n        :tracks=\"this.tracks\"\n        :artistName=\"this.artist\"\n      ></Comments>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Comments from \"@/components/Comments.vue\";\n\nimport _ from \"lodash\";\nimport { getArtistAlbums } from \"../api/spotify/spotify\";\nimport { getAlbumTracks } from \"../api/spotify/spotify\";\n\nimport { getLikes } from \"../api/private/private\";\nimport { createLike } from \"../api/private/private\";\n//import { updateLikes } from \"../api/private/private\";\n\nexport default {\n  components: {\n    Comments\n  },\n  props: {\n    artistID: String,\n    loggedInUserName: String\n  },\n  data: () => ({\n    artist: \"\",\n    artistInfo: [],\n    albumClickedOn: false,\n    clickedAlbumID: \"\",\n    clickedOnInfo: [],\n    tracks: [],\n    albumLikes: []\n  }),\n  methods: {\n    async getArtistInfo(id) {\n      var r = await getArtistAlbums(id);\n      this.artistInfo = r;\n      this.extractInfo();\n    },\n    extractInfo() {\n      this.artist = this.artistInfo[0].artist;\n      this.artistInfo = _.uniqBy(this.artistInfo, \"imageURL\");\n      this.artistInfo = _.uniqBy(this.artistInfo, \"album\");\n    },\n    async getAlbumData(albumID) {\n      let result = await getAlbumTracks(albumID);\n      for (var i = 0; i < result.length; i++) {\n        this.tracks[i] = result[i];\n      }\n    },\n    albumClicked(albumID, imageURL, albumName) {\n      this.albumClickedOn = true;\n      this.getAlbumData(albumID);\n      this.clickedOnInfo[0] = imageURL;\n      this.clickedOnInfo[1] = albumName;\n    },\n    // albumLiked(id) {\n    //   //return true if album liked by user, else return false\n\n    // },\n    albumsLikeCount(albumID) {\n      var likeNum = 0;\n      this.albumLikes.forEach(like => {\n        if (albumID == like.albumID && like.liked == \"true\") {\n          likeNum++;\n        }\n      });\n      return likeNum;\n    },\n    async likeAlbum(id) {\n      await createLike({\n        user: this.loggedInUserName,\n        artistID: this.artistID,\n        albumID: id\n      });\n      this.albumLikes.push({\n        albumID: id,\n        artistID: this.artistID,\n        liked: \"true\",\n        user: this.loggedInUserName\n      });\n    },\n    checkifUserLiked(albumID) {\n      for (var i = 0; i < this.albumLikes.length; i++) {\n        if (\n          albumID == this.albumLikes[i].albumID &&\n          this.loggedInUserName == this.albumLikes[i].user &&\n          this.albumLikes[i].liked == \"true\"\n        ) {\n          return true;\n        }\n      }\n      return false;\n\n      // this.albumLikes.forEach(like => {\n      //   if (\n      //     albumID == like.albumID &&\n      //     this.loggedInUserName == like.user &&\n      //     like.liked == \"true\"\n      //   ) {\n      //     window.console.log(\"album liked\");\n      //     verdict = true;\n      //   } else {\n      //     window.console.log(\"album not liked\");\n      //     verdict = false;\n      //   }\n      // });\n\n      // return verdict;\n    },\n    // unlikeAlbum(id) {\n\n    // }\n    async getAllLikesOfAlbum(id) {\n      this.albumLikes = await getLikes({ artistID: id });\n      //window.console.log(likes)\n    },\n    async unlikeAlbum(albumID) {\n      return albumID;\n    }\n  },\n  async mounted() {\n    await this.getArtistInfo(this.artistID);\n\n    this.getAllLikesOfAlbum(this.artistID);\n  }\n};\n</script>\n\n"],"sourceRoot":"src/components"}]}