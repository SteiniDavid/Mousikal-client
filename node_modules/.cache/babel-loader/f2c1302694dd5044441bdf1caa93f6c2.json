{"remainingRequest":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/eslint-loader/index.js??ref--13-0!/Users/steini/Documents/GitHub/Mousikal-client/src/api/private/private.js","dependencies":[{"path":"/Users/steini/Documents/GitHub/Mousikal-client/src/api/private/private.js","mtime":1576105146435},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/eslint-loader/index.js","mtime":499166100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgZ2V0QXhpb3NJbnN0YW5jZSB9IGZyb20gIi4uLy4uL2NvbmZpZy9BeGlvcyI7CnZhciBheGlvcyA9IGdldEF4aW9zSW5zdGFuY2UoJy9wcml2YXRlL2xpa2VzJyk7IC8vR2V0IGFsbCBsaWtlcyBmb3IgYSBjZXJ0YWluIGFsYnVtCgpleHBvcnQgdmFyIGdldExpa2VzID0gZnVuY3Rpb24gZ2V0TGlrZXMoX3JlZikgewogIHZhciBfcmVmJGFydGlzdElELCBhcnRpc3RJRCwgbGlrZXM7CgogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZ2V0TGlrZXMkKF9jb250ZXh0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgX3JlZiRhcnRpc3RJRCA9IF9yZWYuYXJ0aXN0SUQsIGFydGlzdElEID0gX3JlZiRhcnRpc3RJRCA9PT0gdm9pZCAwID8gJycgOiBfcmVmJGFydGlzdElEOwogICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoYXhpb3MuZ2V0KCcvJyArIGFydGlzdElEKSk7CgogICAgICAgIGNhc2UgNDoKICAgICAgICAgIGxpa2VzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgIC8vYWxlcnQoJ3JlYWNoZXMnKQogICAgICAgICAgLy9hbGVydChjb21tZW50cy5kYXRhLnJlc3VsdFsxXS51c2VyKQogICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXN1bHQuZGF0YS5yZXN1bHQpOwogICAgICAgICAgbGlrZXMgPSBsaWtlcy5kYXRhLnJlc3VsdDsgLy9saWtlcyA9IGxpa2VzLmZpbHRlcihsaWtlID0+IGxpa2UuYXJ0aXN0SUQgPT0gYXJ0aXN0SUQpOwoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGxpa2VzKTsKCiAgICAgICAgY2FzZSA5OgogICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgMCk7CgogICAgICAgIGNhc2UgMTI6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBudWxsLCBudWxsLCBbWzEsIDldXSk7Cn07IC8vTWFrZSBhIGxpa2UKCmV4cG9ydCB2YXIgY3JlYXRlTGlrZSA9IGZ1bmN0aW9uIGNyZWF0ZUxpa2UoX3JlZjIpIHsKICB2YXIgX3JlZjIkdXNlciwgdXNlciwgX3JlZjIkYXJ0aXN0SUQsIGFydGlzdElELCBfcmVmMiRhbGJ1bUlELCBhbGJ1bUlELCBfcmVmMiRsaWtlZCwgbGlrZWQ7CgogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gY3JlYXRlTGlrZSQoX2NvbnRleHQyKSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBfcmVmMiR1c2VyID0gX3JlZjIudXNlciwgdXNlciA9IF9yZWYyJHVzZXIgPT09IHZvaWQgMCA/ICcnIDogX3JlZjIkdXNlciwgX3JlZjIkYXJ0aXN0SUQgPSBfcmVmMi5hcnRpc3RJRCwgYXJ0aXN0SUQgPSBfcmVmMiRhcnRpc3RJRCA9PT0gdm9pZCAwID8gJycgOiBfcmVmMiRhcnRpc3RJRCwgX3JlZjIkYWxidW1JRCA9IF9yZWYyLmFsYnVtSUQsIGFsYnVtSUQgPSBfcmVmMiRhbGJ1bUlEID09PSB2b2lkIDAgPyAnJyA6IF9yZWYyJGFsYnVtSUQsIF9yZWYyJGxpa2VkID0gX3JlZjIubGlrZWQsIGxpa2VkID0gX3JlZjIkbGlrZWQgPT09IHZvaWQgMCA/ICJ0cnVlIiA6IF9yZWYyJGxpa2VkOwogICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChheGlvcy5wb3N0KCcvJyArIGFydGlzdElELCB7CiAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICBhcnRpc3RJRDogYXJ0aXN0SUQsCiAgICAgICAgICAgICAgYWxidW1JRDogYWxidW1JRCwKICAgICAgICAgICAgICB1c2VyOiB1c2VyLAogICAgICAgICAgICAgIGxpa2VkOiBsaWtlZAogICAgICAgICAgICB9LAogICAgICAgICAgICB0eXBlOiAnbWVyZ2UnCiAgICAgICAgICB9KSk7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDIuc2VudC5kYXRhLnJlc3VsdC5wb3N0ZWQpOwoKICAgICAgICBjYXNlIDQ6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn07IC8vRGVsZXRlIGEgY29tbWVudAoKZXhwb3J0IHZhciB1cGRhdGVMaWtlcyA9IGZ1bmN0aW9uIHVwZGF0ZUxpa2VzKF9yZWYzKSB7CiAgdmFyIF9yZWYzJGxpa2VzLCBsaWtlcywgX3JlZjMkYXJ0aXN0SUQsIGFydGlzdElEOwoKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHVwZGF0ZUxpa2VzJChfY29udGV4dDMpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9yZWYzJGxpa2VzID0gX3JlZjMubGlrZXMsIGxpa2VzID0gX3JlZjMkbGlrZXMgPT09IHZvaWQgMCA/ICcnIDogX3JlZjMkbGlrZXMsIF9yZWYzJGFydGlzdElEID0gX3JlZjMuYXJ0aXN0SUQsIGFydGlzdElEID0gX3JlZjMkYXJ0aXN0SUQgPT09IHZvaWQgMCA/ICcnIDogX3JlZjMkYXJ0aXN0SUQ7CiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGF4aW9zLnBvc3QoJy8nICsgYXJ0aXN0SUQsIHsKICAgICAgICAgICAgZGF0YTogbGlrZXMKICAgICAgICAgIH0pKTsKCiAgICAgICAgY2FzZSAzOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0My5zZW50LmRhdGEucmVzdWx0LnBvc3RlZCk7CgogICAgICAgIGNhc2UgNDoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9KTsKfTs="},{"version":3,"sources":["/Users/steini/Documents/GitHub/Mousikal-client/src/api/private/private.js"],"names":["getAxiosInstance","axios","getLikes","artistID","get","likes","data","result","createLike","user","albumID","liked","post","type","posted","updateLikes"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AAEA,IAAMC,KAAK,GAAGD,gBAAgB,CAAC,gBAAD,CAA9B,C,CAGA;;AACA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAASC,QAAT,EAASA,QAAT,8BAAoB,EAApB;AAAA;AAAA;AAAA,0CAEEF,KAAK,CAACG,GAAN,CAAU,MAAID,QAAd,CAFF;;AAAA;AAEZE,UAAAA,KAFY;AAGhB;AACA;AACA;AACAA,UAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,CAAWC,MAAnB,CANgB,CAOhB;;AAPgB,2CAQTF,KARS;;AAAA;AAAA;AAAA;AAAA,2CAUT,CAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB,C,CAcP;;AACA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAASC,IAAT,EAASA,IAAT,2BAAgB,EAAhB,sCAAoBN,QAApB,EAAoBA,QAApB,+BAA+B,EAA/B,yCAAmCO,OAAnC,EAAmCA,OAAnC,8BAA6C,EAA7C,sCAAiDC,KAAjD,EAAiDA,KAAjD,4BAAyD,MAAzD;AAAA;AAAA,0CACRV,KAAK,CAACW,IAAN,CAAW,MAAIT,QAAf,EAAyB;AACnCG,YAAAA,IAAI,EAAE;AACFH,cAAAA,QAAQ,EAARA,QADE;AACQO,cAAAA,OAAO,EAAPA,OADR;AACiBD,cAAAA,IAAI,EAAJA,IADjB;AACuBE,cAAAA,KAAK,EAALA;AADvB,aAD6B;AAInCE,YAAAA,IAAI,EAAE;AAJ6B,WAAzB,CADQ;;AAAA;AAAA,2DAMlBP,IANkB,CAMbC,MANa,CAMNO,MANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB,C,CASP;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAQV,KAAR,EAAQA,KAAR,4BAAe,EAAf,uCAAmBF,QAAnB,EAAmBA,QAAnB,+BAA8B,EAA9B;AAAA;AAAA,0CACTF,KAAK,CAACW,IAAN,CAAW,MAAIT,QAAf,EAAyB;AACrCG,YAAAA,IAAI,EAAED;AAD+B,WAAzB,CADS;;AAAA;AAAA,2DAGnBC,IAHmB,CAGdC,MAHc,CAGPO,MAHO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import { getAxiosInstance } from \"../../config/Axios\";\n\nconst axios = getAxiosInstance('/private/likes');\n\n\n//Get all likes for a certain album\nexport const getLikes = async ({ artistID = '' }) => {\n    try {\n        let likes = await axios.get('/'+artistID);\n        //alert('reaches')\n        //alert(comments.data.result[1].user)\n        //console.log(result.data.result);\n        likes = likes.data.result;\n        //likes = likes.filter(like => like.artistID == artistID);\n        return likes;\n    } catch (e) {\n        return 0;\n    }\n};\n\n//Make a like\nexport const createLike = async ({ user = '', artistID = '', albumID = '', liked = \"true\" }) => {\n    return (await axios.post('/'+artistID, {\n        data: {\n            artistID, albumID, user, liked\n        },\n        type: 'merge'\n    })).data.result.posted;\n};\n\n//Delete a comment\nexport const updateLikes = async ({likes ='', artistID = ''}) => {\n    return (await axios.post('/'+artistID, {\n      data: likes\n    })).data.result.posted;\n  };"]}]}