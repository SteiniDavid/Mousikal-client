{"remainingRequest":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js!/Users/steini/Documents/GitHub/Mousikal-client/node_modules/eslint-loader/index.js??ref--13-0!/Users/steini/Documents/GitHub/Mousikal-client/src/api/private/private.js","dependencies":[{"path":"/Users/steini/Documents/GitHub/Mousikal-client/src/api/private/private.js","mtime":1576104558700},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/eslint-loader/index.js","mtime":499166100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgZ2V0QXhpb3NJbnN0YW5jZSB9IGZyb20gIi4uLy4uL2NvbmZpZy9BeGlvcyI7CnZhciBheGlvcyA9IGdldEF4aW9zSW5zdGFuY2UoJy9wcml2YXRlL2xpa2VzJyk7IC8vR2V0IGFsbCBsaWtlcyBmb3IgYSBjZXJ0YWluIGFsYnVtCgpleHBvcnQgdmFyIGdldExpa2VzID0gZnVuY3Rpb24gZ2V0TGlrZXMoX3JlZikgewogIHZhciBfcmVmJGFydGlzdElELCBhcnRpc3RJRCwgbGlrZXM7CgogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZ2V0TGlrZXMkKF9jb250ZXh0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgX3JlZiRhcnRpc3RJRCA9IF9yZWYuYXJ0aXN0SUQsIGFydGlzdElEID0gX3JlZiRhcnRpc3RJRCA9PT0gdm9pZCAwID8gJycgOiBfcmVmJGFydGlzdElEOwogICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoYXhpb3MuZ2V0KCcvJyArIGFydGlzdElEKSk7CgogICAgICAgIGNhc2UgNDoKICAgICAgICAgIGxpa2VzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgIC8vYWxlcnQoJ3JlYWNoZXMnKQogICAgICAgICAgLy9hbGVydChjb21tZW50cy5kYXRhLnJlc3VsdFsxXS51c2VyKQogICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXN1bHQuZGF0YS5yZXN1bHQpOwogICAgICAgICAgbGlrZXMgPSBsaWtlcy5kYXRhLnJlc3VsdDsKICAgICAgICAgIGxpa2VzID0gbGlrZXMuZmlsdGVyKGZ1bmN0aW9uIChsaWtlKSB7CiAgICAgICAgICAgIHJldHVybiBsaWtlLmFydGlzdElEID09IGFydGlzdElEOwogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBsaWtlcyk7CgogICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTA7CiAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgMCk7CgogICAgICAgIGNhc2UgMTM6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBudWxsLCBudWxsLCBbWzEsIDEwXV0pOwp9OyAvL01ha2UgYSBsaWtlCgpleHBvcnQgdmFyIGNyZWF0ZUxpa2UgPSBmdW5jdGlvbiBjcmVhdGVMaWtlKF9yZWYyKSB7CiAgdmFyIF9yZWYyJHVzZXIsIHVzZXIsIF9yZWYyJGFydGlzdElELCBhcnRpc3RJRCwgX3JlZjIkYWxidW1JRCwgYWxidW1JRCwgX3JlZjIkbGlrZWQsIGxpa2VkOwoKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGNyZWF0ZUxpa2UkKF9jb250ZXh0MikgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgX3JlZjIkdXNlciA9IF9yZWYyLnVzZXIsIHVzZXIgPSBfcmVmMiR1c2VyID09PSB2b2lkIDAgPyAnJyA6IF9yZWYyJHVzZXIsIF9yZWYyJGFydGlzdElEID0gX3JlZjIuYXJ0aXN0SUQsIGFydGlzdElEID0gX3JlZjIkYXJ0aXN0SUQgPT09IHZvaWQgMCA/ICcnIDogX3JlZjIkYXJ0aXN0SUQsIF9yZWYyJGFsYnVtSUQgPSBfcmVmMi5hbGJ1bUlELCBhbGJ1bUlEID0gX3JlZjIkYWxidW1JRCA9PT0gdm9pZCAwID8gJycgOiBfcmVmMiRhbGJ1bUlELCBfcmVmMiRsaWtlZCA9IF9yZWYyLmxpa2VkLCBsaWtlZCA9IF9yZWYyJGxpa2VkID09PSB2b2lkIDAgPyAidHJ1ZSIgOiBfcmVmMiRsaWtlZDsKICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoYXhpb3MucG9zdCgnLycgKyBhcnRpc3RJRCwgewogICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgYXJ0aXN0SUQ6IGFydGlzdElELAogICAgICAgICAgICAgIGFsYnVtSUQ6IGFsYnVtSUQsCiAgICAgICAgICAgICAgdXNlcjogdXNlciwKICAgICAgICAgICAgICBsaWtlZDogbGlrZWQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdHlwZTogJ21lcmdlJwogICAgICAgICAgfSkpOwoKICAgICAgICBjYXNlIDM6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQuZGF0YS5yZXN1bHQucG9zdGVkKTsKCiAgICAgICAgY2FzZSA0OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgfQogICAgfQogIH0pOwp9OyAvL0RlbGV0ZSBhIGNvbW1lbnQKCmV4cG9ydCB2YXIgdXBkYXRlTGlrZXMgPSBmdW5jdGlvbiB1cGRhdGVMaWtlcyhsaWtlcykgewogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gdXBkYXRlTGlrZXMkKF9jb250ZXh0MykgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChheGlvcy5wb3N0KCcnLCB7CiAgICAgICAgICAgIGRhdGE6IGxpa2VzCiAgICAgICAgICB9KSk7CgogICAgICAgIGNhc2UgMjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDMuc2VudC5kYXRhLnJlc3VsdC5wb3N0ZWQpOwoKICAgICAgICBjYXNlIDM6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn07"},{"version":3,"sources":["/Users/steini/Documents/GitHub/Mousikal-client/src/api/private/private.js"],"names":["getAxiosInstance","axios","getLikes","artistID","get","likes","data","result","filter","like","createLike","user","albumID","liked","post","type","posted","updateLikes"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AAEA,IAAMC,KAAK,GAAGD,gBAAgB,CAAC,gBAAD,CAA9B,C,CAGA;;AACA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAASC,QAAT,EAASA,QAAT,8BAAoB,EAApB;AAAA;AAAA;AAAA,0CAEEF,KAAK,CAACG,GAAN,CAAU,MAAID,QAAd,CAFF;;AAAA;AAEZE,UAAAA,KAFY;AAGhB;AACA;AACA;AACAA,UAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,CAAWC,MAAnB;AACAF,UAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAa,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACN,QAAL,IAAiBA,QAArB;AAAA,WAAjB,CAAR;AAPgB,2CAQTE,KARS;;AAAA;AAAA;AAAA;AAAA,2CAUT,CAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB,C,CAcP;;AACA,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAASC,IAAT,EAASA,IAAT,2BAAgB,EAAhB,sCAAoBR,QAApB,EAAoBA,QAApB,+BAA+B,EAA/B,yCAAmCS,OAAnC,EAAmCA,OAAnC,8BAA6C,EAA7C,sCAAiDC,KAAjD,EAAiDA,KAAjD,4BAAyD,MAAzD;AAAA;AAAA,0CACRZ,KAAK,CAACa,IAAN,CAAW,MAAIX,QAAf,EAAyB;AACnCG,YAAAA,IAAI,EAAE;AACFH,cAAAA,QAAQ,EAARA,QADE;AACQS,cAAAA,OAAO,EAAPA,OADR;AACiBD,cAAAA,IAAI,EAAJA,IADjB;AACuBE,cAAAA,KAAK,EAALA;AADvB,aAD6B;AAInCE,YAAAA,IAAI,EAAE;AAJ6B,WAAzB,CADQ;;AAAA;AAAA,2DAMlBT,IANkB,CAMbC,MANa,CAMNS,MANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB,C,CASP;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOZ,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACTJ,KAAK,CAACa,IAAN,CAAW,EAAX,EAAe;AAC3BR,YAAAA,IAAI,EAAED;AADqB,WAAf,CADS;;AAAA;AAAA,2DAGnBC,IAHmB,CAGdC,MAHc,CAGPS,MAHO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import { getAxiosInstance } from \"../../config/Axios\";\n\nconst axios = getAxiosInstance('/private/likes');\n\n\n//Get all likes for a certain album\nexport const getLikes = async ({ artistID = '' }) => {\n    try {\n        let likes = await axios.get('/'+artistID);\n        //alert('reaches')\n        //alert(comments.data.result[1].user)\n        //console.log(result.data.result);\n        likes = likes.data.result;\n        likes = likes.filter(like => like.artistID == artistID);\n        return likes;\n    } catch (e) {\n        return 0;\n    }\n};\n\n//Make a like\nexport const createLike = async ({ user = '', artistID = '', albumID = '', liked = \"true\" }) => {\n    return (await axios.post('/'+artistID, {\n        data: {\n            artistID, albumID, user, liked\n        },\n        type: 'merge'\n    })).data.result.posted;\n};\n\n//Delete a comment\nexport const updateLikes = async (likes) => {\n    return (await axios.post('', {\n      data: likes\n    })).data.result.posted;\n  };"]}]}