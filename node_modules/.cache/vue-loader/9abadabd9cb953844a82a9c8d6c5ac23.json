{"remainingRequest":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/steini/Documents/GitHub/Mousikal-client/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/steini/Documents/GitHub/Mousikal-client/src/components/Comments.vue","mtime":1575924522000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js","mtime":499166100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNyZWF0ZUNvbW1lbnQgfSBmcm9tICIuLi9hcGkvY29tbWVudC9Db21tZW50IjsKaW1wb3J0IHsgZ2V0QWxidW1Db21tZW50cyB9IGZyb20gIi4uL2FwaS9jb21tZW50L0NvbW1lbnQiOwppbXBvcnQgeyB1cGRhdGVDb21tZW50cyB9IGZyb20gIi4uL2FwaS9jb21tZW50L0NvbW1lbnQiOwoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBjb21tZW50c1BhY2thZ2U6IFtdCiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgdXNlck5hbWU6ICJTdGVpbmkiLAogICAgY29tbWVudDogIiIsCiAgICBhbGJ1bUlEOiAiNzc2VW84NDVuWUhKcE5hU3R2MURzNCIsCiAgICBhbGJ1bUNvbW1lbnRzOiBbXQogIH0pLAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHN1Ym1pdENvbW1lbnQoKSB7CiAgICAgIC8vY2hlY2tpbmcgaWYgYWxidW1JRCBleGlzdHMKICAgICAgLy9sZXQgcmVzdWx0ID0gYXdhaXQgYXhpb3MuZ2V0KCcnKTsKICAgICAgbGV0IGNvbW1lbnRzID0gYXdhaXQgY3JlYXRlQ29tbWVudCh7CiAgICAgICAgdXNlcjogdGhpcy51c2VyTmFtZSwKICAgICAgICBjb21tZW50Qm9keTogdGhpcy5jb21tZW50LAogICAgICAgIGFsYnVtSUQ6IHRoaXMuYWxidW1JRAogICAgICB9KTsKICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzLnVuc2hpZnQoewogICAgICAgIHVzZXI6IHRoaXMudXNlck5hbWUsCiAgICAgICAgY29tbWVudEJvZHk6IHRoaXMuY29tbWVudCwKICAgICAgICBhbGJ1bUlEOiB0aGlzLmFsYnVtSUQsCiAgICAgICAgZGF0ZTogbmV3IERhdGUoKS5nZXRUaW1lKCkKICAgICAgfSk7CiAgICAgIHRoaXMuY29tbWVudCA9ICIiOwogICAgICByZXR1cm4gY29tbWVudHM7CiAgICAgIC8vY29uc29sZS5sb2coY29tbWVudHMpOwogICAgfSwKICAgIGFzeW5jIGZldGNoQWxidW1Db21tZW50cygpIHsKICAgICAgbGV0IGNvbW1lbnRzID0gYXdhaXQgZ2V0QWxidW1Db21tZW50cyh7IGFsYnVtSUQ6IHRoaXMuYWxidW1JRCB9KTsKICAgICAgLy90aGlzLmFsYnVtQ29tbWVudHMgPSBjb21tZW50czsKCiAgICAgIHRoaXMuYWxidW1Db21tZW50cyA9IFtdOwoKICAgICAgY29tbWVudHMuZm9yRWFjaChjb21tZW50ID0+IHsKICAgICAgICB0aGlzLmFsYnVtQ29tbWVudHMucHVzaCh7CiAgICAgICAgICAuLi5jb21tZW50LAogICAgICAgICAgZWRpdDogZmFsc2UsCiAgICAgICAgICBlZGl0VmVyc2lvbjogIiIKICAgICAgICB9KTsKICAgICAgfSk7CgogICAgICByZXR1cm4gY29tbWVudHM7CiAgICB9LAogICAgYXN5bmMgZGVsZXRlQ29tbWVudChkYXRlKSB7CiAgICAgIHRoaXMuYWxidW1Db21tZW50cyA9IHRoaXMuYWxidW1Db21tZW50cy5maWx0ZXIoCiAgICAgICAgY29tbWVudCA9PiBjb21tZW50LmRhdGUgIT09IGRhdGUKICAgICAgKTsKCiAgICAgIHZhciB0bXAgPSBbXTsKICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzLmZvckVhY2goY29tbWVudCA9PiB7CiAgICAgICAgdG1wLnB1c2goewogICAgICAgICAgYWxidW1JRDogY29tbWVudC5hbGJ1bUlELAogICAgICAgICAgdXNlcjogY29tbWVudC51c2VyLAogICAgICAgICAgY29tbWVudEJvZHk6IGNvbW1lbnQuY29tbWVudEJvZHksCiAgICAgICAgICBkYXRlOiBjb21tZW50LmRhdGUKICAgICAgICB9KTsKICAgICAgfSk7CgogICAgICBhd2FpdCB1cGRhdGVDb21tZW50cyh0bXApOwogICAgfSwKICAgIGFzeW5jIGVkaXRDb21tZW50KGRhdGUpIHsKICAgICAgdmFyIGNvbW1lbnRJbmRleCA9IHRoaXMuYWxidW1Db21tZW50cy5maW5kSW5kZXgoCiAgICAgICAgY29tbWVudCA9PiBjb21tZW50LmRhdGUgPT0gZGF0ZQogICAgICApOwogICAgICB0aGlzLmFsYnVtQ29tbWVudHNbY29tbWVudEluZGV4XS5lZGl0ID0gdHJ1ZTsKICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzW2NvbW1lbnRJbmRleF0uZWRpdFZlcnNpb24gPSB0aGlzLmFsYnVtQ29tbWVudHNbCiAgICAgICAgY29tbWVudEluZGV4CiAgICAgIF0uY29tbWVudEJvZHk7CiAgICB9LAogICAgY2FuY2VsRWRpdChkYXRlKSB7CiAgICAgIHZhciBjb21tZW50SW5kZXggPSB0aGlzLmFsYnVtQ29tbWVudHMuZmluZEluZGV4KAogICAgICAgIGNvbW1lbnQgPT4gY29tbWVudC5kYXRlID09IGRhdGUKICAgICAgKTsKICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzW2NvbW1lbnRJbmRleF0uZWRpdCA9IGZhbHNlOwogICAgfSwKICAgIGFzeW5jIHN1Ym1pdEVkaXQoZGF0ZSkgewogICAgICB2YXIgY29tbWVudEluZGV4ID0gdGhpcy5hbGJ1bUNvbW1lbnRzLmZpbmRJbmRleCgKICAgICAgICBjb21tZW50ID0+IGNvbW1lbnQuZGF0ZSA9PSBkYXRlCiAgICAgICk7CgogICAgICB0aGlzLmFsYnVtQ29tbWVudHNbY29tbWVudEluZGV4XS5jb21tZW50Qm9keSA9IHRoaXMuYWxidW1Db21tZW50c1sKICAgICAgICBjb21tZW50SW5kZXgKICAgICAgXS5lZGl0VmVyc2lvbjsKICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzW2NvbW1lbnRJbmRleF0uZWRpdCA9IGZhbHNlOwoKICAgICAgdmFyIHRtcCA9IFtdOwogICAgICB0aGlzLmFsYnVtQ29tbWVudHMuZm9yRWFjaChjb21tZW50ID0+IHsKICAgICAgICB0bXAucHVzaCh7CiAgICAgICAgICBhbGJ1bUlEOiBjb21tZW50LmFsYnVtSUQsCiAgICAgICAgICB1c2VyOiBjb21tZW50LnVzZXIsCiAgICAgICAgICBjb21tZW50Qm9keTogY29tbWVudC5jb21tZW50Qm9keSwKICAgICAgICAgIGRhdGU6IGNvbW1lbnQuZGF0ZQogICAgICAgIH0pOwogICAgICB9KTsKCiAgICAgIGF3YWl0IHVwZGF0ZUNvbW1lbnRzKHRtcCk7CiAgICB9LAogICAgYXN5bmMgc2hvd0FsYnVtRGF0YSgpIHsKICAgICAgLy9UaGlzIGlzIHdoZXJlIHRoZSBhcGkgcmVxdWVzdCB0byBnZXQgdGhlIGluZm8gb2YgYSBnaXZlbiBhbGJ1bSBpcyBtYWRlLiAKICAgICAgLy9UaGlzIHNob3VsZCBzZXQgYW5kIGNyZWF0ZSB0aGUgdHJhY2tsaXN0IGFycmF5IGFuZCB0aGUgYWxidW0gY292ZXIsIG1heWJlIHNvbWUKICAgICAgLy9vdGhlciBkYXRhIHRvIHNob3cgd291bGQgYmUgY29vbC4gCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgLy9hbGVydCgibW91bnRlZCIpCiAgICB0aGlzLnVzZXJOYW1lID0gdGhpcy5jb21tZW50c1BhY2thZ2VbMl07CiAgICB0aGlzLmFydGlzdE5hbWUgPSB0aGlzLmNvbW1lbnRzUGFja2FnZVsxXTsKICAgIHRoaXMuYWxidW1JRCA9IHRoaXMuY29tbWVudHNQYWNrYWdlWzBdOwogICAgdGhpcy5zaG93QWxidW1EYXRhKCk7CiAgICB0aGlzLmZldGNoQWxidW1Db21tZW50cygpOwogIH0KfTsKCi8vQ2hlY2sgaWYganNvbiBvYmplY3Qgd2l0aCBhbGJ1bUlEIGV4aXN0cwovL0lmIGl0IGRvZXNudCBleGlzdCBjcmVhdGUgaXQKLy9PbmNlIGNyZWF0ZWQgcHVzaCBvbnRvIGl0IHRoZSBjb21tZW50IHdpdGggdXNlcm5hbWUsIGNvbW1lbnQsIGRhdGVDcmVhdGVkCg=="},{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Comments.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-layout text-center wrap justify-center>\n      <v-flex xs6 mb-5>\n        <h2 class=\"headline font-weight-bold mb-3\">Make a comment</h2>\n        <v-layout justify-center>\n          <v-textarea outlined name=\"comment-box\" label=\"Make a comment\" value v-model=\"comment\"></v-textarea>\n        </v-layout>\n        <v-btn class=\"white--text\" color=\"deep-purple accent-4\" @click=\"submitComment\">Submit</v-btn>\n      </v-flex>\n\n      <v-layout justify-center v-for=\"comment in albumComments\" :key=\"comment.date\">\n        <v-card class=\"mx-6 mb-6\" color=\"green\" dark max-width=\"600\" min-width=\"500\">\n          <v-card-title>\n            <v-icon large left>mdi-comment</v-icon>\n            <span class=\"title font-weight-light\">Comment</span>\n          </v-card-title>\n\n          <v-card-text\n            class=\"headline font-weight-bold\"\n            v-if=\"comment.edit!=true\"\n          >{{comment.commentBody}}</v-card-text>\n          <div v-else>\n            <v-textarea\n              outlined\n              name=\"comment-box\"\n              label=\"Make a comment\"\n              value\n              v-model=\"comment.editVersion\"\n            ></v-textarea>\n            <v-btn\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              @click=\"submitEdit(comment.date)\"\n            >Submit</v-btn>\n            <v-btn\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              @click=\"cancelEdit(comment.date)\"\n            >Cancel</v-btn>\n          </div>\n\n          <v-card-actions>\n            <v-list-item class=\"grow\">\n              <v-list-item-avatar color=\"grey darken-3\">\n                <v-img\n                  class=\"elevation-6\"\n                  src=\"https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortCurly&accessoriesType=Prescription02&hairColor=Black&facialHairType=Blank&clotheType=Hoodie&clotheColor=White&eyeType=Default&eyebrowType=DefaultNatural&mouthType=Default&skinColor=Light\"\n                ></v-img>\n              </v-list-item-avatar>\n\n              <v-list-item-content>\n                <v-list-item-title>{{comment.user}}</v-list-item-title>\n              </v-list-item-content>\n\n              <v-row align=\"center\" justify=\"end\" v-if=\"comment.user == userName\">\n                <v-icon\n                  class=\"mr-1\"\n                  @click=\"editComment(comment.date)\"\n                  v-if=\"comment.edit!=true\"\n                >mdi-pencil</v-icon>\n                <span\n                  class=\"subheading mr-2\"\n                  @click=\"editComment(comment.date)\"\n                  v-if=\"comment.edit!=true\"\n                >Edit</span>\n                <span class=\"mr-1\"></span>\n                <v-icon class=\"mr-1\" @click=\"deleteComment(comment.date)\">mdi-delete</v-icon>\n                <span class=\"subheading\" @click=\"deleteComment(comment.date)\">Delete</span>\n              </v-row>\n            </v-list-item>\n          </v-card-actions>\n        </v-card>\n      </v-layout>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport { createComment } from \"../api/comment/Comment\";\nimport { getAlbumComments } from \"../api/comment/Comment\";\nimport { updateComments } from \"../api/comment/Comment\";\n\nexport default {\n  props: {\n    commentsPackage: []\n  },\n  data: () => ({\n    userName: \"Steini\",\n    comment: \"\",\n    albumID: \"776Uo845nYHJpNaStv1Ds4\",\n    albumComments: []\n  }),\n  methods: {\n    async submitComment() {\n      //checking if albumID exists\n      //let result = await axios.get('');\n      let comments = await createComment({\n        user: this.userName,\n        commentBody: this.comment,\n        albumID: this.albumID\n      });\n      this.albumComments.unshift({\n        user: this.userName,\n        commentBody: this.comment,\n        albumID: this.albumID,\n        date: new Date().getTime()\n      });\n      this.comment = \"\";\n      return comments;\n      //console.log(comments);\n    },\n    async fetchAlbumComments() {\n      let comments = await getAlbumComments({ albumID: this.albumID });\n      //this.albumComments = comments;\n\n      this.albumComments = [];\n\n      comments.forEach(comment => {\n        this.albumComments.push({\n          ...comment,\n          edit: false,\n          editVersion: \"\"\n        });\n      });\n\n      return comments;\n    },\n    async deleteComment(date) {\n      this.albumComments = this.albumComments.filter(\n        comment => comment.date !== date\n      );\n\n      var tmp = [];\n      this.albumComments.forEach(comment => {\n        tmp.push({\n          albumID: comment.albumID,\n          user: comment.user,\n          commentBody: comment.commentBody,\n          date: comment.date\n        });\n      });\n\n      await updateComments(tmp);\n    },\n    async editComment(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n      this.albumComments[commentIndex].edit = true;\n      this.albumComments[commentIndex].editVersion = this.albumComments[\n        commentIndex\n      ].commentBody;\n    },\n    cancelEdit(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n      this.albumComments[commentIndex].edit = false;\n    },\n    async submitEdit(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n\n      this.albumComments[commentIndex].commentBody = this.albumComments[\n        commentIndex\n      ].editVersion;\n      this.albumComments[commentIndex].edit = false;\n\n      var tmp = [];\n      this.albumComments.forEach(comment => {\n        tmp.push({\n          albumID: comment.albumID,\n          user: comment.user,\n          commentBody: comment.commentBody,\n          date: comment.date\n        });\n      });\n\n      await updateComments(tmp);\n    },\n    async showAlbumData() {\n      //This is where the api request to get the info of a given album is made. \n      //This should set and create the tracklist array and the album cover, maybe some\n      //other data to show would be cool. \n    }\n  },\n  mounted() {\n    //alert(\"mounted\")\n    this.userName = this.commentsPackage[2];\n    this.artistName = this.commentsPackage[1];\n    this.albumID = this.commentsPackage[0];\n    this.showAlbumData();\n    this.fetchAlbumComments();\n  }\n};\n\n//Check if json object with albumID exists\n//If it doesnt exist create it\n//Once created push onto it the comment with username, comment, dateCreated\n</script>\n\n"]}]}