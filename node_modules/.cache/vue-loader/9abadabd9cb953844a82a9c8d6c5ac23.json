{"remainingRequest":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/steini/Documents/GitHub/Mousikal-client/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/steini/Documents/GitHub/Mousikal-client/src/components/Comments.vue","mtime":1576086738746},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js","mtime":499166100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNyZWF0ZUNvbW1lbnQgfSBmcm9tICIuLi9hcGkvY29tbWVudC9Db21tZW50IjsKaW1wb3J0IHsgZ2V0QWxidW1Db21tZW50cyB9IGZyb20gIi4uL2FwaS9jb21tZW50L0NvbW1lbnQiOwppbXBvcnQgeyB1cGRhdGVDb21tZW50cyB9IGZyb20gIi4uL2FwaS9jb21tZW50L0NvbW1lbnQiOwoKLy8gaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgbG9nZ2VkSW5Vc2VyTmFtZTogU3RyaW5nLAogICAgYWxidW1VUkw6IFN0cmluZywKICAgIGFsYnVtTmFtZTogU3RyaW5nLAogICAgdHJhY2tzOiBbXSwKICAgIGFydGlzdE5hbWU6IFN0cmluZwogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIHVzZXJOYW1lOiAiYm9iIiwKICAgIGNvbW1lbnQ6ICIiLAogICAgYWxidW1JRDogIiIsCiAgICBhbGJ1bUNvbW1lbnRzOiBbXSwKICAgIHRyYWNrczogW10sCiAgICBhbGJ1bU5hbWU6ICIiCiAgfSksCiAgbWV0aG9kczogewogICAgYXN5bmMgc3VibWl0Q29tbWVudCgpIHsKICAgICAgLy9jaGVja2luZyBpZiBhbGJ1bUlEIGV4aXN0cwogICAgICAvL2xldCByZXN1bHQgPSBhd2FpdCBheGlvcy5nZXQoJycpOwogICAgICBsZXQgY29tbWVudHMgPSBhd2FpdCBjcmVhdGVDb21tZW50KHsKICAgICAgICB1c2VyOiB0aGlzLnVzZXJOYW1lLAogICAgICAgIGNvbW1lbnRCb2R5OiB0aGlzLmNvbW1lbnQsCiAgICAgICAgYWxidW1JRDogdGhpcy5hbGJ1bUlECiAgICAgIH0pOwogICAgICB0aGlzLmFsYnVtQ29tbWVudHMudW5zaGlmdCh7CiAgICAgICAgdXNlcjogdGhpcy51c2VyTmFtZSwKICAgICAgICBjb21tZW50Qm9keTogdGhpcy5jb21tZW50LAogICAgICAgIGFsYnVtSUQ6IHRoaXMuYWxidW1JRCwKICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpLmdldFRpbWUoKQogICAgICB9KTsKICAgICAgdGhpcy5jb21tZW50ID0gIiI7CiAgICAgIHJldHVybiBjb21tZW50czsKICAgICAgLy9jb25zb2xlLmxvZyhjb21tZW50cyk7CiAgICB9LAogICAgYXN5bmMgZmV0Y2hBbGJ1bUNvbW1lbnRzKCkgewogICAgICBsZXQgY29tbWVudHMgPSBhd2FpdCBnZXRBbGJ1bUNvbW1lbnRzKHsgYWxidW1JRDogdGhpcy5hbGJ1bUlEIH0pOwogICAgICAvL3RoaXMuYWxidW1Db21tZW50cyA9IGNvbW1lbnRzOwoKICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzID0gW107CgogICAgICBjb21tZW50cy5mb3JFYWNoKGNvbW1lbnQgPT4gewogICAgICAgIHRoaXMuYWxidW1Db21tZW50cy5wdXNoKHsKICAgICAgICAgIC4uLmNvbW1lbnQsCiAgICAgICAgICBlZGl0OiBmYWxzZSwKICAgICAgICAgIGVkaXRWZXJzaW9uOiAiIgogICAgICAgIH0pOwogICAgICB9KTsKCiAgICAgIHJldHVybiBjb21tZW50czsKICAgIH0sCiAgICBhc3luYyBkZWxldGVDb21tZW50KGRhdGUpIHsKICAgICAgdGhpcy5hbGJ1bUNvbW1lbnRzID0gdGhpcy5hbGJ1bUNvbW1lbnRzLmZpbHRlcigKICAgICAgICBjb21tZW50ID0+IGNvbW1lbnQuZGF0ZSAhPT0gZGF0ZQogICAgICApOwoKICAgICAgdmFyIHRtcCA9IFtdOwogICAgICB0aGlzLmFsYnVtQ29tbWVudHMuZm9yRWFjaChjb21tZW50ID0+IHsKICAgICAgICB0bXAucHVzaCh7CiAgICAgICAgICBhbGJ1bUlEOiBjb21tZW50LmFsYnVtSUQsCiAgICAgICAgICB1c2VyOiBjb21tZW50LnVzZXIsCiAgICAgICAgICBjb21tZW50Qm9keTogY29tbWVudC5jb21tZW50Qm9keSwKICAgICAgICAgIGRhdGU6IGNvbW1lbnQuZGF0ZQogICAgICAgIH0pOwogICAgICB9KTsKCiAgICAgIGF3YWl0IHVwZGF0ZUNvbW1lbnRzKHRtcCk7CiAgICB9LAogICAgYXN5bmMgZWRpdENvbW1lbnQoZGF0ZSkgewogICAgICB2YXIgY29tbWVudEluZGV4ID0gdGhpcy5hbGJ1bUNvbW1lbnRzLmZpbmRJbmRleCgKICAgICAgICBjb21tZW50ID0+IGNvbW1lbnQuZGF0ZSA9PSBkYXRlCiAgICAgICk7CiAgICAgIHRoaXMuYWxidW1Db21tZW50c1tjb21tZW50SW5kZXhdLmVkaXQgPSB0cnVlOwogICAgICB0aGlzLmFsYnVtQ29tbWVudHNbY29tbWVudEluZGV4XS5lZGl0VmVyc2lvbiA9IHRoaXMuYWxidW1Db21tZW50c1sKICAgICAgICBjb21tZW50SW5kZXgKICAgICAgXS5jb21tZW50Qm9keTsKICAgIH0sCiAgICBjYW5jZWxFZGl0KGRhdGUpIHsKICAgICAgdmFyIGNvbW1lbnRJbmRleCA9IHRoaXMuYWxidW1Db21tZW50cy5maW5kSW5kZXgoCiAgICAgICAgY29tbWVudCA9PiBjb21tZW50LmRhdGUgPT0gZGF0ZQogICAgICApOwogICAgICB0aGlzLmFsYnVtQ29tbWVudHNbY29tbWVudEluZGV4XS5lZGl0ID0gZmFsc2U7CiAgICB9LAogICAgYXN5bmMgc3VibWl0RWRpdChkYXRlKSB7CiAgICAgIHZhciBjb21tZW50SW5kZXggPSB0aGlzLmFsYnVtQ29tbWVudHMuZmluZEluZGV4KAogICAgICAgIGNvbW1lbnQgPT4gY29tbWVudC5kYXRlID09IGRhdGUKICAgICAgKTsKCiAgICAgIHRoaXMuYWxidW1Db21tZW50c1tjb21tZW50SW5kZXhdLmNvbW1lbnRCb2R5ID0gdGhpcy5hbGJ1bUNvbW1lbnRzWwogICAgICAgIGNvbW1lbnRJbmRleAogICAgICBdLmVkaXRWZXJzaW9uOwogICAgICB0aGlzLmFsYnVtQ29tbWVudHNbY29tbWVudEluZGV4XS5lZGl0ID0gZmFsc2U7CgogICAgICB2YXIgdG1wID0gW107CiAgICAgIHRoaXMuYWxidW1Db21tZW50cy5mb3JFYWNoKGNvbW1lbnQgPT4gewogICAgICAgIHRtcC5wdXNoKHsKICAgICAgICAgIGFsYnVtSUQ6IGNvbW1lbnQuYWxidW1JRCwKICAgICAgICAgIHVzZXI6IGNvbW1lbnQudXNlciwKICAgICAgICAgIGNvbW1lbnRCb2R5OiBjb21tZW50LmNvbW1lbnRCb2R5LAogICAgICAgICAgZGF0ZTogY29tbWVudC5kYXRlCiAgICAgICAgfSk7CiAgICAgIH0pOwoKICAgICAgYXdhaXQgdXBkYXRlQ29tbWVudHModG1wKTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB3aW5kb3cuY29uc29sZS5sb2coInVzaW5nIHRoaXMiKTsKICAgIHRoaXMuZmV0Y2hBbGJ1bUNvbW1lbnRzKCk7CiAgICAvL3RoaXMuc2hvd0FsYnVtRGF0YSgpOwogIH0KfTsKCi8vQ2hlY2sgaWYganNvbiBvYmplY3Qgd2l0aCBhbGJ1bUlEIGV4aXN0cwovL0lmIGl0IGRvZXNudCBleGlzdCBjcmVhdGUgaXQKLy9PbmNlIGNyZWF0ZWQgcHVzaCBvbnRvIGl0IHRoZSBjb21tZW50IHdpdGggdXNlcm5hbWUsIGNvbW1lbnQsIGRhdGVDcmVhdGVkCg=="},{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Comments.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-layout text-center wrap justify-center>\n      <v-flex xs6 mb-5>\n        <v-row v-for=\"track in tracks\" :key=\"track.name\">\n          <h4>{{track}}</h4>\n        </v-row>\n        <div v-if=\"loggedInUserName!='Anonymous'\">\n          <h2 class=\"headline font-weight-bold mb-3\">Make a comment</h2>\n          <v-layout justify-center>\n            <v-textarea outlined name=\"comment-box\" label=\"Make a comment\" value v-model=\"comment\"></v-textarea>\n          </v-layout>\n          <v-btn class=\"white--text\" color=\"deep-purple accent-4\" @click=\"submitComment\">Submit</v-btn>\n        </div>\n      </v-flex>\n\n      <v-layout justify-center v-for=\"comment in albumComments\" :key=\"comment.date\">\n        <v-card class=\"mx-6 mb-6\" color=\"green\" dark max-width=\"600\" min-width=\"500\">\n          <v-card-title>\n            <v-icon large left>mdi-comment</v-icon>\n            <span class=\"title font-weight-light\">Comment</span>\n          </v-card-title>\n\n          <v-card-text\n            class=\"headline font-weight-bold\"\n            v-if=\"comment.edit!=true\"\n          >{{comment.commentBody}}</v-card-text>\n          <div v-else>\n            <v-textarea\n              outlined\n              name=\"comment-box\"\n              label=\"Make a comment\"\n              value\n              v-model=\"comment.editVersion\"\n            ></v-textarea>\n            <v-btn\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              @click=\"submitEdit(comment.date)\"\n            >Submit</v-btn>\n            <v-btn\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              @click=\"cancelEdit(comment.date)\"\n            >Cancel</v-btn>\n          </div>\n\n          <v-card-actions>\n            <v-list-item class=\"grow\">\n              <v-list-item-avatar color=\"grey darken-3\">\n                <v-img\n                  class=\"elevation-6\"\n                  src=\"https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortCurly&accessoriesType=Prescription02&hairColor=Black&facialHairType=Blank&clotheType=Hoodie&clotheColor=White&eyeType=Default&eyebrowType=DefaultNatural&mouthType=Default&skinColor=Light\"\n                ></v-img>\n              </v-list-item-avatar>\n\n              <v-list-item-content>\n                <v-list-item-title>{{comment.user}}</v-list-item-title>\n              </v-list-item-content>\n\n              <v-row align=\"center\" justify=\"end\" v-if=\"comment.user == userName\">\n                <v-icon\n                  class=\"mr-1\"\n                  @click=\"editComment(comment.date)\"\n                  v-if=\"comment.edit!=true\"\n                >mdi-pencil</v-icon>\n                <span\n                  class=\"subheading mr-2\"\n                  @click=\"editComment(comment.date)\"\n                  v-if=\"comment.edit!=true\"\n                >Edit</span>\n                <span class=\"mr-1\"></span>\n                <v-icon class=\"mr-1\" @click=\"deleteComment(comment.date)\">mdi-delete</v-icon>\n                <span class=\"subheading\" @click=\"deleteComment(comment.date)\">Delete</span>\n              </v-row>\n            </v-list-item>\n          </v-card-actions>\n        </v-card>\n      </v-layout>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport { createComment } from \"../api/comment/Comment\";\nimport { getAlbumComments } from \"../api/comment/Comment\";\nimport { updateComments } from \"../api/comment/Comment\";\n\n// import axios from 'axios';\n\nexport default {\n  props: {\n    loggedInUserName: String,\n    albumURL: String,\n    albumName: String,\n    tracks: [],\n    artistName: String\n  },\n  data: () => ({\n    userName: \"bob\",\n    comment: \"\",\n    albumID: \"\",\n    albumComments: [],\n    tracks: [],\n    albumName: \"\"\n  }),\n  methods: {\n    async submitComment() {\n      //checking if albumID exists\n      //let result = await axios.get('');\n      let comments = await createComment({\n        user: this.userName,\n        commentBody: this.comment,\n        albumID: this.albumID\n      });\n      this.albumComments.unshift({\n        user: this.userName,\n        commentBody: this.comment,\n        albumID: this.albumID,\n        date: new Date().getTime()\n      });\n      this.comment = \"\";\n      return comments;\n      //console.log(comments);\n    },\n    async fetchAlbumComments() {\n      let comments = await getAlbumComments({ albumID: this.albumID });\n      //this.albumComments = comments;\n\n      this.albumComments = [];\n\n      comments.forEach(comment => {\n        this.albumComments.push({\n          ...comment,\n          edit: false,\n          editVersion: \"\"\n        });\n      });\n\n      return comments;\n    },\n    async deleteComment(date) {\n      this.albumComments = this.albumComments.filter(\n        comment => comment.date !== date\n      );\n\n      var tmp = [];\n      this.albumComments.forEach(comment => {\n        tmp.push({\n          albumID: comment.albumID,\n          user: comment.user,\n          commentBody: comment.commentBody,\n          date: comment.date\n        });\n      });\n\n      await updateComments(tmp);\n    },\n    async editComment(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n      this.albumComments[commentIndex].edit = true;\n      this.albumComments[commentIndex].editVersion = this.albumComments[\n        commentIndex\n      ].commentBody;\n    },\n    cancelEdit(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n      this.albumComments[commentIndex].edit = false;\n    },\n    async submitEdit(date) {\n      var commentIndex = this.albumComments.findIndex(\n        comment => comment.date == date\n      );\n\n      this.albumComments[commentIndex].commentBody = this.albumComments[\n        commentIndex\n      ].editVersion;\n      this.albumComments[commentIndex].edit = false;\n\n      var tmp = [];\n      this.albumComments.forEach(comment => {\n        tmp.push({\n          albumID: comment.albumID,\n          user: comment.user,\n          commentBody: comment.commentBody,\n          date: comment.date\n        });\n      });\n\n      await updateComments(tmp);\n    }\n  },\n  mounted() {\n    window.console.log(\"using this\");\n    this.fetchAlbumComments();\n    //this.showAlbumData();\n  }\n};\n\n//Check if json object with albumID exists\n//If it doesnt exist create it\n//Once created push onto it the comment with username, comment, dateCreated\n</script>\n\n"]}]}