{"remainingRequest":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/steini/Documents/GitHub/Mousikal-client/src/components/ArtistPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/steini/Documents/GitHub/Mousikal-client/src/components/ArtistPage.vue","mtime":1576087136069},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/babel-loader/lib/index.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/cache-loader/dist/cjs.js","mtime":499166100000},{"path":"/Users/steini/Documents/GitHub/Mousikal-client/node_modules/vue-loader/lib/index.js","mtime":499166100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb21tZW50cyBmcm9tICJAL2NvbXBvbmVudHMvQ29tbWVudHMudnVlIjsKCmltcG9ydCBfIGZyb20gImxvZGFzaCI7CmltcG9ydCB7IGdldEFydGlzdEFsYnVtcyB9IGZyb20gIi4uL2FwaS9zcG90aWZ5L3Nwb3RpZnkiOwppbXBvcnQgeyBnZXRBbGJ1bVRyYWNrcyB9IGZyb20gIi4uL2FwaS9zcG90aWZ5L3Nwb3RpZnkiOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENvbW1lbnRzCiAgfSwKICBwcm9wczogewogICAgYXJ0aXN0SUQ6IFN0cmluZywKICAgIGxvZ2dlZEluVXNlck5hbWU6IFN0cmluZwogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGFydGlzdDogIiIsCiAgICBhcnRpc3RJbmZvOiBbXSwKICAgIGFsYnVtQ2xpY2tlZE9uOiBmYWxzZSwKICAgIGNsaWNrZWRBbGJ1bUlEOiAiIiwKICAgIGNsaWNrZWRPbkluZm86IFtdLAogICAgdHJhY2tzOiBbXQogIH0pLAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldEFydGlzdEluZm8oaWQpIHsKICAgICAgdmFyIHIgPSBhd2FpdCBnZXRBcnRpc3RBbGJ1bXMoaWQpOwogICAgICB0aGlzLmFydGlzdEluZm8gPSByOwogICAgICB0aGlzLmV4dHJhY3RJbmZvKCk7CiAgICB9LAogICAgZXh0cmFjdEluZm8oKSB7CiAgICAgIHRoaXMuYXJ0aXN0ID0gdGhpcy5hcnRpc3RJbmZvWzBdLmFydGlzdDsKICAgICAgdGhpcy5hcnRpc3RJbmZvID0gXy51bmlxQnkodGhpcy5hcnRpc3RJbmZvLCAiaW1hZ2VVUkwiKTsKICAgICAgdGhpcy5hcnRpc3RJbmZvID0gXy51bmlxQnkodGhpcy5hcnRpc3RJbmZvLCAiYWxidW0iKTsKICAgIH0sCiAgICBhc3luYyBnZXRBbGJ1bURhdGEoYWxidW1JRCkgewogICAgICAvL1RoaXMgaXMgd2hlcmUgdGhlIGFwaSByZXF1ZXN0IHRvIGdldCB0aGUgaW5mbyBvZiBhIGdpdmVuIGFsYnVtIGlzIG1hZGUuCiAgICAgIC8vVGhpcyBzaG91bGQgc2V0IGFuZCBjcmVhdGUgdGhlIHRyYWNrbGlzdCBhcnJheSBhbmQgdGhlIGFsYnVtIGNvdmVyLCBtYXliZSBzb21lCiAgICAgIC8vb3RoZXIgZGF0YSB0byBzaG93IHdvdWxkIGJlIGNvb2wuCiAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBnZXRBbGJ1bVRyYWNrcyhhbGJ1bUlEKTsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQubGVuZ3RoOyBpKyspIHsKICAgICAgICB0aGlzLnRyYWNrc1tpXSA9IHJlc3VsdFtpXTsKICAgICAgfQogICAgfSwKICAgIGFsYnVtQ2xpY2tlZChhbGJ1bUlELCBpbWFnZVVSTCwgYWxidW1OYW1lKSB7CiAgICAgIHRoaXMuYWxidW1DbGlja2VkT24gPSB0cnVlOwogICAgICB0aGlzLmdldEFsYnVtRGF0YShhbGJ1bUlEKTsKICAgICAgdGhpcy5jbGlja2VkT25JbmZvWzBdID0gaW1hZ2VVUkw7CiAgICAgIHRoaXMuY2xpY2tlZE9uSW5mb1sxXSA9IGFsYnVtTmFtZTsKICAgIH0KICB9LAogIGFzeW5jIG1vdW50ZWQoKSB7CiAgICBhd2FpdCB0aGlzLmdldEFydGlzdEluZm8odGhpcy5hcnRpc3RJRCk7CiAgfQp9Owo="},{"version":3,"sources":["ArtistPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ArtistPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div v-if=\"!albumClickedOn\">\n      <div>\n        <h1>{{artist}}</h1>\n      </div>\n\n      <v-container>\n        <v-row dense>\n          <v-col v-for=\"album in artistInfo\" :key=\"album.albumID\" :cols=\"4\">\n            <v-card v-on:click=\"albumClicked(album.albumID, album.imageURL, album.album)\">\n              <v-img\n                :src=\"album.imageURL\"\n                class=\"white--text align-end\"\n                gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n                height=\"auto\"\n                width=\"auto\"\n              ></v-img>\n              <v-card-actions>\n                <v-card-title>\n                  <span class=\"title font-weight-light\">{{album.album}}</span>\n                </v-card-title>\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </div>\n    <div v-if=\"albumClickedOn\">\n      <Comments\n        :loggedInUserName=\"this.loggedInUserName\"\n        :albumURL=\"clickedOnInfo[0]\"\n        :albumName=\"clickedOnInfo[1]\"\n        :tracks=\"this.tracks\"\n        :artistName=\"this.artist\"\n      ></Comments>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Comments from \"@/components/Comments.vue\";\n\nimport _ from \"lodash\";\nimport { getArtistAlbums } from \"../api/spotify/spotify\";\nimport { getAlbumTracks } from \"../api/spotify/spotify\";\n\nexport default {\n  components: {\n    Comments\n  },\n  props: {\n    artistID: String,\n    loggedInUserName: String\n  },\n  data: () => ({\n    artist: \"\",\n    artistInfo: [],\n    albumClickedOn: false,\n    clickedAlbumID: \"\",\n    clickedOnInfo: [],\n    tracks: []\n  }),\n  methods: {\n    async getArtistInfo(id) {\n      var r = await getArtistAlbums(id);\n      this.artistInfo = r;\n      this.extractInfo();\n    },\n    extractInfo() {\n      this.artist = this.artistInfo[0].artist;\n      this.artistInfo = _.uniqBy(this.artistInfo, \"imageURL\");\n      this.artistInfo = _.uniqBy(this.artistInfo, \"album\");\n    },\n    async getAlbumData(albumID) {\n      //This is where the api request to get the info of a given album is made.\n      //This should set and create the tracklist array and the album cover, maybe some\n      //other data to show would be cool.\n      let result = await getAlbumTracks(albumID);\n      for (var i = 0; i < result.length; i++) {\n        this.tracks[i] = result[i];\n      }\n    },\n    albumClicked(albumID, imageURL, albumName) {\n      this.albumClickedOn = true;\n      this.getAlbumData(albumID);\n      this.clickedOnInfo[0] = imageURL;\n      this.clickedOnInfo[1] = albumName;\n    }\n  },\n  async mounted() {\n    await this.getArtistInfo(this.artistID);\n  }\n};\n</script>\n\n"]}]}